#!/usr/bin/python

import sys
import json
import asyncio

try:
    import aiohttp
except ImportError:
    print("Install 'aiohttp' with `pip install aiohttp`", file=sys.stderr)
    sys.exit(1)

TEKNIK = 'https://api.teknik.io/v1/Upload'

async def upload(file):
    try:
        fp = open(file, 'rb')
    except FileNotFoundError as ex:
        return {'error': 'file does not exist: {!r}'.format(file)}
    except IsADirectoryError as ex:
        return {'error': 'file is a directory: {!r}'.format(file)}

    payload = {
        'file': fp,
        'encrypt': json.dumps(False)
    }

    async with aiohttp.ClientSession() as session:
        async with session.post(TEKNIK, data=payload) as resp:
            return await resp.json()

async def main(argv=sys.argv[1:]):
    args = set(argv)

    if not args or {'-h', '--help'} & args:
        print('Usage: teknik [-h | --help] <files>...')
        return 0

    tasks = [upload(file) for file in args]
    responses = await asyncio.gather(*tasks)

    error = any(res.get('error') for res in responses)

    if error:
        json.dump(responses, fp=sys.stderr, indent=2)

    for res in responses:
        if 'result' in res:
            print(res['result']['url'])

    return 1 if error else 0


if __name__ == '__main__':
    try:
        loop = asyncio.get_event_loop()
        exit_code = loop.run_until_complete(main())
        sys.exit(exit_code)
    finally:
        loop.close()
